<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             
             xmlns:viewModels="clr-namespace:OpenDictionary.ViewModels" 
             xmlns:observables="clr-namespace:OpenDictionary.Observables.Metadatas" 
             xmlns:fonts="clr-namespace:OpenDictionary.Fonts.Icons"
             xmlns:toolkit="http://xamarin.com/schemas/2020/toolkit"
             
             x:DataType="viewModels:WordDetailViewModel"
             
             Title="Word Details"
             
             x:Class="OpenDictionary.Views.Pages.WordDetailPage">

    <ContentPage.Resources>
        <ResourceDictionary>
            <DataTemplate x:Key="PhoneticObservableItemTemplate" x:DataType="observables:PhoneticObservable">
                <StackLayout>
                    <Label>
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Pronunciation: " FontAttributes="Bold" 
                                      TextColor="{x:StaticResource Green-200}"/>
                                <Span Text="{Binding Value}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>

                    <StackLayout Spacing="10" Orientation="Horizontal">
                        <ImageButton HorizontalOptions="Start" BackgroundColor="Transparent" 
                                     Command="{Binding PlayAudioCommand, Source={RelativeSource AncestorType={x:Type viewModels:WordDetailViewModel}}}"
                                     CommandParameter="{Binding Audio}">
                            <ImageButton.Source>
                                <FontImageSource FontFamily="FontAwesomeRegular" 
                                                 Glyph="{x:Static fonts:FontAwesomeRegular.CirclePlay}"
                                                 Color="{AppThemeBinding Light={x:StaticResource Dark}, Dark={x:StaticResource White}}"/>
                            </ImageButton.Source>
                        </ImageButton>
                        <StackLayout.Triggers>
                            <DataTrigger TargetType="StackLayout" Binding="{Binding Audio}" Value="">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </StackLayout.Triggers>
                    </StackLayout>
                </StackLayout>
            </DataTemplate>

            <DataTemplate x:Key="DefinitionObservableItemTemplate" x:DataType="observables:DefinitionObservable">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <Rectangle BackgroundColor="{x:StaticResource Green}" WidthRequest="4"/>

                    <StackLayout Grid.Column="1">
                        <Label>
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="Definition: " FontAttributes="Bold" 
                                          TextColor="{x:StaticResource Blue-300}"/>
                                    <Span Text="{Binding Value}"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label>
                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding Path=Example.Length, FallbackValue=0, TargetNullValue=0}" Value="0">
                                    <Setter Property="IsVisible" Value="False"/>
                                </DataTrigger>
                            </Label.Triggers>
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="Example: " FontAttributes="Bold" TextColor="{x:StaticResource Indigo-300}"/>
                                    <Span Text="{Binding Example}"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                    </StackLayout>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="MeaningObservableItemTemplate" x:DataType="observables:MeaningObservable">
                <StackLayout>
                    <Label>
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Part of speech: " FontAttributes="Bold" 
                                      TextColor="{x:StaticResource Green-200}"/>
                                <Span Text="{Binding PartOfSpeech}"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                    <Label>
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Synonyms: " FontAttributes="Bold" 
                                      TextColor="{x:StaticResource Green-200}"/>
                                <Span Text="{Binding Synonyms}"/>
                            </FormattedString>
                        </Label.FormattedText>
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding Synonyms.Length}" Value="0">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <Label>
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="Antonyms: " FontAttributes="Bold" 
                                      TextColor="{x:StaticResource Green-200}"/>
                                <Span Text="{Binding Antonyms}"/>
                            </FormattedString>
                        </Label.FormattedText>
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding Antonyms.Length}" Value="0">
                                <Setter Property="IsVisible" Value="False"/>
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <StackLayout BindableLayout.ItemsSource="{Binding Definitions}"
                                 BindableLayout.ItemTemplate="{x:StaticResource DefinitionObservableItemTemplate}"/>
                </StackLayout>
            </DataTemplate>
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.ToolbarItems>
        <ToolbarItem Command="{Binding DeleteCommand}">
            <ToolbarItem.IconImageSource>
                <FontImageSource
                    FontFamily="FontAwesomeRegular"
                    Glyph="{x:Static fonts:FontAwesomeRegular.TrashCan}"/>
            </ToolbarItem.IconImageSource>
        </ToolbarItem>
        <ToolbarItem Command="{Binding RedirectToEditCommand}">
            <ToolbarItem.IconImageSource>
                <FontImageSource
                    FontFamily="FontAwesomeRegular"
                    Glyph="{x:Static fonts:FontAwesomeRegular.PenToSquare}"/>
            </ToolbarItem.IconImageSource>
        </ToolbarItem>
    </ContentPage.ToolbarItems>

    <ContentPage.Content>
        <ScrollView VerticalScrollBarVisibility="Never">
            <StackLayout Spacing="10" Padding="10">
                <Frame>
                    <StackLayout>
                        <Label>
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="Origin: " FontAttributes="Bold"/>
                                    <Span Text="{Binding Word.Origin}"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                        <Label>
                            <Label.FormattedText>
                                <FormattedString>
                                    <Span Text="Translation: " FontAttributes="Bold"/>
                                    <Span Text="{Binding Word.Translation}"/>
                                </FormattedString>
                            </Label.FormattedText>
                        </Label>
                    </StackLayout>
                </Frame>

                <StackLayout toolkit:StateLayout.CurrentState="{Binding MetadataLoadState, Mode=TwoWay}" 
                         toolkit:StateLayout.CurrentCustomStateKey="{Binding MetadataCustomState, Mode=TwoWay}">
                    <toolkit:StateLayout.StateViews>
                        <toolkit:StateView StateKey="Loading">
                            <StackLayout>
                                <ActivityIndicator IsRunning="True"/>
                                <Label Text="Finding..."/>
                            </StackLayout>
                        </toolkit:StateView>
                        <toolkit:StateView StateKey="Success">
                            <StackLayout Spacing="10">
                                <Frame>
                                    <StackLayout>
                                        <Label Text="Phonetics" FontAttributes="Bold" FontSize="Medium"/>

                                        <StackLayout BindableLayout.ItemsSource="{Binding Metadata.Phonetics}" 
                                         BindableLayout.ItemTemplate="{x:StaticResource PhoneticObservableItemTemplate}" 
                                         Spacing="20"/>
                                    </StackLayout>
                                </Frame>

                                <Frame Grid.Row="1">
                                    <StackLayout>
                                        <Label Text="Meanings" FontAttributes="Bold" FontSize="Medium"/>

                                        <StackLayout BindableLayout.ItemsSource="{Binding Metadata.Meanings}" 
                                         BindableLayout.ItemTemplate="{x:StaticResource MeaningObservableItemTemplate}"/>
                                    </StackLayout>
                                </Frame>
                            </StackLayout>
                        </toolkit:StateView>
                        <toolkit:StateView StateKey="Custom" CustomStateKey="{x:Static viewModels:ErrorStates.NoInternetConnection}">
                            <StackLayout>
                                <Label Text="No internet connetion" HorizontalTextAlignment="Center" FontSize="Large" FontAttributes="Bold"/>
                            </StackLayout>
                        </toolkit:StateView>
                        <toolkit:StateView StateKey="Custom" CustomStateKey="{x:Static viewModels:ErrorStates.NotFound}">
                            <StackLayout>
                                <Label Text="Word not found in online dictionary" HorizontalTextAlignment="Center" FontSize="Large" FontAttributes="Bold"/>
                            </StackLayout>
                        </toolkit:StateView>
                    </toolkit:StateLayout.StateViews>
                </StackLayout>
            </StackLayout>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>
